version: '3'
services:

  rabbitmq:
    image: rabbitmq:latest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - shop-network
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 10s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./db:/data/db
    networks:
      - shop-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet 1
      interval: 10s
      timeout: 10s
      retries: 5

  mysql:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=usermanagement
    networks:
      - shop-network
    ports:
      - 3307:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  order-management:
    build: ./order-management1
    image: order-management:latest
    ports:
      - "8085:8085"
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      - shop-network
    links:
      - product-management:localhost
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb
      SPRING_RABBITMQ_HOST: rabbitmq

  product-management:
    build: ./product-management
    image: product-management:latest
    ports:
      - "8080:8080"
    networks:
      - shop-network
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb
      SPRING_RABBITMQ_HOST: rabbitmq

  payment-management:
    build: ./user-management
    image: payment-management:latest
    ports:
      - "8088:8088"
    networks:
      - shop-network
    links:
      - order-management:localhost
      - mysql:localhost
    depends_on:
      - rabbitmq
      - mysql
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
networks:
  shop-network:
    driver: bridge