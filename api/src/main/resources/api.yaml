openapi: 3.0.1
info:
  version: '1.0'
  title: Order service
servers:
  - url: '/api/v1/order-service'
tags:
  - name: Order Management
    description: Operations with Order entities
paths:
  /order:
    post:
      tags:
        - Order Management
      summary: Create Order
      description: Create order
      operationId: create
      requestBody:
        $ref: '#/components/requestBodies/OrderRequest'
      responses:
        '200':
          description: Created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
  /order/{id}:
    get:
      tags:
        - Order Management
      summary: Get Order
      description: Get Order by id
      operationId: get
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Ok. Order succesfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
        '404':
          description: Order not found
    put:
      tags:
        - Order Management
      summary: Update Order
      description: Update Order
      operationId: update
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/OrderRequest'
      responses:
        '200':
          description: Ok. Updated order succesfully returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
    delete:
      tags:
        - Order Management
      summary: Delete Order
      description: Delete Order
      operationId: delete
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Ok. Order succesfully deleted

  /orders:
    get:
      tags:
        - Order Management
      summary: Get all orders
      description: Get all orders
      operationId: getAllOrders
      responses:
        '200':
          description: All existing orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'

  /order/{id}/total:
    get:
      tags:
        - Order Management
      summary: Get order total
      description: Get order total
      operationId: getOrderTotal
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: All existing orders
          content:
            application/json:
              schema:
                type: number
                format: double

  /order/{id}/payment:
    post:
      tags:
        - Order management
      summary: Pay for the order
      description: Performs payment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/paymentType'
      operationId: pay
      responses:
        '200':
          description: Ok. Order is succesfully paid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
components:
  parameters:
    id:
      name: id
      in: path
      description: Order ID
      required: true
      schema:
        type: string
    paymentType:
      name: paymentType
      in: query
      description: Payment Type
      required: true
      schema:
        $ref: '#/components/schemas/PaymentType'

  requestBodies:
    OrderRequest:
      description: Order request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderDTO'
    PaymentRequest:
      description: Payment request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentType'
  schemas:
    OrderDTO:
      type: object
      properties:
        id:
          description: Unique Identifier of Order.
          type: string
          readOnly: true
        name:
          description: Name of Order.
          type: string
          maxLength: 100
        customerId:
          type: integer
        total:
          type: number
          format: double
        shippingType:
          $ref: '#/components/schemas/ShippingType'
        status:
          $ref: '#/components/schemas/OrderStatus'
        products:
          type: object
          additionalProperties:
            type: integer
      required:
        - name
        - customerId
        - total
        - shippingType
        - status
        - products

    ShippingType:
      type: string
      enum:
        - AT_SHOP
        - DELIVERY

    OrderStatus:
      type: string
      enum:
        - IN_PROGRESS
        - DELIVERED
        - PAID

    PaymentType:
      type: string
      enum:
        - CASH
        - CARD
        - CARD_ONLINE